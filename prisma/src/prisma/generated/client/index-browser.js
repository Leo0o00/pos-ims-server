
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Points_of_salesScalarFieldEnum = {
  point_of_sales_id: 'point_of_sales_id',
  name: 'name',
  address: 'address',
  img: 'img',
  created_at: 'created_at',
  last_update: 'last_update'
};

exports.Prisma.Products_categoriesScalarFieldEnum = {
  products_categories_id: 'products_categories_id',
  name: 'name',
  created_at: 'created_at',
  last_update: 'last_update'
};

exports.Prisma.ProvidersScalarFieldEnum = {
  provider_id: 'provider_id',
  name: 'name',
  phone_number: 'phone_number',
  email: 'email',
  img: 'img',
  created_at: 'created_at',
  last_update: 'last_update'
};

exports.Prisma.ProductsScalarFieldEnum = {
  product_id: 'product_id',
  branch: 'branch',
  model: 'model',
  description: 'description',
  purchase_price: 'purchase_price',
  stock_quantity: 'stock_quantity',
  amount: 'amount',
  purchase_date: 'purchase_date',
  category_name: 'category_name',
  provider_name: 'provider_name',
  pos_name: 'pos_name',
  created_at: 'created_at',
  last_update: 'last_update'
};

exports.Prisma.Products_imagesScalarFieldEnum = {
  id: 'id',
  image_original_key: 'image_original_key',
  image_thumb_key: 'image_thumb_key',
  created_at: 'created_at',
  last_update: 'last_update'
};

exports.Prisma.EmployeesScalarFieldEnum = {
  employee_id: 'employee_id',
  CID: 'CID',
  first_name: 'first_name',
  last_name: 'last_name',
  address: 'address',
  phone_number: 'phone_number',
  img: 'img',
  pos_name: 'pos_name',
  created_at: 'created_at',
  last_update: 'last_update'
};

exports.Prisma.SalaryScalarFieldEnum = {
  employee_cid: 'employee_cid',
  amount: 'amount',
  date: 'date',
  created_at: 'created_at',
  last_update: 'last_update'
};

exports.Prisma.SalesScalarFieldEnum = {
  sales_id: 'sales_id',
  employee_cid: 'employee_cid',
  date: 'date',
  total_amount: 'total_amount',
  created_at: 'created_at',
  last_update: 'last_update',
  deleted_at: 'deleted_at'
};

exports.Prisma.Products_salesScalarFieldEnum = {
  sale_id: 'sale_id',
  product_id: 'product_id',
  quantity: 'quantity',
  unit_price: 'unit_price',
  total_price: 'total_price'
};

exports.Prisma.PurchasesScalarFieldEnum = {
  purchases_id: 'purchases_id',
  purchase_date: 'purchase_date',
  created_at: 'created_at',
  last_update: 'last_update'
};

exports.Prisma.Products_purchasesScalarFieldEnum = {
  purchase_id: 'purchase_id',
  product_id: 'product_id',
  product_quantity: 'product_quantity',
  product_unit_price: 'product_unit_price',
  created_at: 'created_at',
  last_update: 'last_update'
};

exports.Prisma.Expenses_categoryScalarFieldEnum = {
  expense_category_id: 'expense_category_id',
  name: 'name',
  created_at: 'created_at',
  last_update: 'last_update'
};

exports.Prisma.ExpensesScalarFieldEnum = {
  expenses_id: 'expenses_id',
  amount: 'amount',
  date: 'date',
  exp_category_name: 'exp_category_name',
  created_at: 'created_at',
  last_update: 'last_update'
};

exports.Prisma.UsersScalarFieldEnum = {
  user_id: 'user_id',
  username: 'username',
  password: 'password',
  employee_id: 'employee_id',
  role: 'role',
  created_at: 'created_at',
  last_time_online: 'last_time_online',
  last_update: 'last_update'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Points_of_sales: 'Points_of_sales',
  Products_categories: 'Products_categories',
  Providers: 'Providers',
  Products: 'Products',
  Products_images: 'Products_images',
  Employees: 'Employees',
  Salary: 'Salary',
  Sales: 'Sales',
  Products_sales: 'Products_sales',
  Purchases: 'Purchases',
  Products_purchases: 'Products_purchases',
  Expenses_category: 'Expenses_category',
  Expenses: 'Expenses',
  Users: 'Users'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
